(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c="function"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error("Cannot find module '"+i+"'");throw a.code="MODULE_NOT_FOUND",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u="function"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({1:[function(require,module,exports){
"use strict";

require("./slider");

require("./events");

$('.form-select-box').chosen({
  width: "80%"
});

},{"./events":2,"./slider":3}],2:[function(require,module,exports){
"use strict";

$(document).ready(function () {
  $('.calc-menu-button').on('click', function () {
    $('.calc-menu-button').toggleClass('active');
    $('.calc-menu').toggleClass('active');
  });
  $('#resetBtn').on('click', function () {
    $('.form-select-box').val('').trigger('chosen:updated');
    slider.noUiSlider.reset();
  });
});

},{}],3:[function(require,module,exports){
"use strict";

document.addEventListener("DOMContentLoaded", function () {
  var slider = document.getElementById('slider');
  var min = document.getElementById('slider-value-min'),
      max = document.getElementById('slider-value-max');
  noUiSlider.create(slider, {
    start: [0, 200],
    // tooltips: true,
    connect: true,
    // padding: 7,
    range: {
      'min': 0,
      'max': 200
    }
  });
  slider.noUiSlider.on('update', function (values, handle) {
    if (handle) {
      max.innerHTML = Math.round(values[handle]);
    } else {
      min.innerHTML = Math.round(values[handle]);
    }
  });
});

},{}]},{},[1])

//# sourceMappingURL=data:application/json;charset=utf8;base64,
