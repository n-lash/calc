(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c="function"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error("Cannot find module '"+i+"'");throw a.code="MODULE_NOT_FOUND",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u="function"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({1:[function(require,module,exports){
"use strict";

require("./slider");

},{"./slider":2}],2:[function(require,module,exports){
"use strict";

document.addEventListener("DOMContentLoaded", function () {
  var slider = document.getElementById('slider');
  var min = document.getElementById('slider-value-min'),
      max = document.getElementById('slider-value-max');
  noUiSlider.create(slider, {
    start: [0, 200],
    // tooltips: true,
    connect: true,
    // padding: 7,
    range: {
      'min': 0,
      'max': 200
    }
  });
  slider.noUiSlider.on('update', function (values, handle) {
    if (handle) {
      max.innerHTML = Math.round(values[handle]);
    } else {
      min.innerHTML = Math.round(values[handle]);
    }
  });
});

},{}]},{},[1])

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm5vZGVfbW9kdWxlcy9icm93c2VyLXBhY2svX3ByZWx1ZGUuanMiLCJwcm9qZWN0cy9jYWxjL3NyYy9qcy9hcHAuanMiLCJwcm9qZWN0cy9jYWxjL3NyYy9qcy9zbGlkZXIuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7OztBQ0FBOzs7OztBQ0FBLFFBQVEsQ0FBQyxnQkFBVCxDQUEwQixrQkFBMUIsRUFBOEMsWUFBTTtBQUVoRCxNQUFNLE1BQU0sR0FBRyxRQUFRLENBQUMsY0FBVCxDQUF3QixRQUF4QixDQUFmO0FBQ0EsTUFBSSxHQUFHLEdBQUcsUUFBUSxDQUFDLGNBQVQsQ0FBd0Isa0JBQXhCLENBQVY7QUFBQSxNQUNJLEdBQUcsR0FBRyxRQUFRLENBQUMsY0FBVCxDQUF3QixrQkFBeEIsQ0FEVjtBQUdBLEVBQUEsVUFBVSxDQUFDLE1BQVgsQ0FBa0IsTUFBbEIsRUFBMEI7QUFDdEIsSUFBQSxLQUFLLEVBQUUsQ0FBQyxDQUFELEVBQUksR0FBSixDQURlO0FBRXRCO0FBQ0EsSUFBQSxPQUFPLEVBQUUsSUFIYTtBQUl0QjtBQUNBLElBQUEsS0FBSyxFQUFFO0FBQ0gsYUFBTyxDQURKO0FBRUgsYUFBTztBQUZKO0FBTGUsR0FBMUI7QUFZQSxFQUFBLE1BQU0sQ0FBQyxVQUFQLENBQWtCLEVBQWxCLENBQXFCLFFBQXJCLEVBQStCLFVBQVUsTUFBVixFQUFrQixNQUFsQixFQUEwQjtBQUNyRCxRQUFJLE1BQUosRUFBWTtBQUNSLE1BQUEsR0FBRyxDQUFDLFNBQUosR0FBZ0IsSUFBSSxDQUFDLEtBQUwsQ0FBVyxNQUFNLENBQUMsTUFBRCxDQUFqQixDQUFoQjtBQUNILEtBRkQsTUFFTztBQUNILE1BQUEsR0FBRyxDQUFDLFNBQUosR0FBZ0IsSUFBSSxDQUFDLEtBQUwsQ0FBVyxNQUFNLENBQUMsTUFBRCxDQUFqQixDQUFoQjtBQUNIO0FBQ0osR0FORDtBQU9ILENBekJEIiwiZmlsZSI6ImJ1bmRsZS5qcyIsInNvdXJjZXNDb250ZW50IjpbIihmdW5jdGlvbigpe2Z1bmN0aW9uIHIoZSxuLHQpe2Z1bmN0aW9uIG8oaSxmKXtpZighbltpXSl7aWYoIWVbaV0pe3ZhciBjPVwiZnVuY3Rpb25cIj09dHlwZW9mIHJlcXVpcmUmJnJlcXVpcmU7aWYoIWYmJmMpcmV0dXJuIGMoaSwhMCk7aWYodSlyZXR1cm4gdShpLCEwKTt2YXIgYT1uZXcgRXJyb3IoXCJDYW5ub3QgZmluZCBtb2R1bGUgJ1wiK2krXCInXCIpO3Rocm93IGEuY29kZT1cIk1PRFVMRV9OT1RfRk9VTkRcIixhfXZhciBwPW5baV09e2V4cG9ydHM6e319O2VbaV1bMF0uY2FsbChwLmV4cG9ydHMsZnVuY3Rpb24ocil7dmFyIG49ZVtpXVsxXVtyXTtyZXR1cm4gbyhufHxyKX0scCxwLmV4cG9ydHMscixlLG4sdCl9cmV0dXJuIG5baV0uZXhwb3J0c31mb3IodmFyIHU9XCJmdW5jdGlvblwiPT10eXBlb2YgcmVxdWlyZSYmcmVxdWlyZSxpPTA7aTx0Lmxlbmd0aDtpKyspbyh0W2ldKTtyZXR1cm4gb31yZXR1cm4gcn0pKCkiLCJpbXBvcnQgXCIuL3NsaWRlclwiO1xuIiwiZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcihcIkRPTUNvbnRlbnRMb2FkZWRcIiwgKCkgPT4ge1xuXG4gICAgY29uc3Qgc2xpZGVyID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ3NsaWRlcicpO1xuICAgIGxldCBtaW4gPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnc2xpZGVyLXZhbHVlLW1pbicpLFxuICAgICAgICBtYXggPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnc2xpZGVyLXZhbHVlLW1heCcpO1xuXG4gICAgbm9VaVNsaWRlci5jcmVhdGUoc2xpZGVyLCB7XG4gICAgICAgIHN0YXJ0OiBbMCwgMjAwXSxcbiAgICAgICAgLy8gdG9vbHRpcHM6IHRydWUsXG4gICAgICAgIGNvbm5lY3Q6IHRydWUsXG4gICAgICAgIC8vIHBhZGRpbmc6IDcsXG4gICAgICAgIHJhbmdlOiB7XG4gICAgICAgICAgICAnbWluJzogMCxcbiAgICAgICAgICAgICdtYXgnOiAyMDBcbiAgICAgICAgfSxcbiAgICB9KTtcblxuXG4gICAgc2xpZGVyLm5vVWlTbGlkZXIub24oJ3VwZGF0ZScsIGZ1bmN0aW9uICh2YWx1ZXMsIGhhbmRsZSkge1xuICAgICAgICBpZiAoaGFuZGxlKSB7XG4gICAgICAgICAgICBtYXguaW5uZXJIVE1MID0gTWF0aC5yb3VuZCh2YWx1ZXNbaGFuZGxlXSk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICBtaW4uaW5uZXJIVE1MID0gTWF0aC5yb3VuZCh2YWx1ZXNbaGFuZGxlXSk7XG4gICAgICAgIH1cbiAgICB9KTtcbn0pO1xuIl0sInByZUV4aXN0aW5nQ29tbWVudCI6Ii8vIyBzb3VyY2VNYXBwaW5nVVJMPWRhdGE6YXBwbGljYXRpb24vanNvbjtjaGFyc2V0PXV0Zi04O2Jhc2U2NCxleUoyWlhKemFXOXVJam96TENKemIzVnlZMlZ6SWpwYkltNXZaR1ZmYlc5a2RXeGxjeTlpY205M2MyVnlMWEJoWTJzdlgzQnlaV3gxWkdVdWFuTWlMQ0p3Y205cVpXTjBjeTlqWVd4akwzTnlZeTlxY3k5aGNIQXVhbk1pTENKd2NtOXFaV04wY3k5allXeGpMM055WXk5cWN5OXpiR2xrWlhJdWFuTWlYU3dpYm1GdFpYTWlPbHRkTENKdFlYQndhVzVuY3lJNklrRkJRVUU3T3p0QlEwRkJPenM3T3p0QlEwRkJMRkZCUVZFc1EwRkJReXhuUWtGQlZDeERRVUV3UWl4clFrRkJNVUlzUlVGQk9FTXNXVUZCVFR0QlFVVm9SQ3hOUVVGTkxFMUJRVTBzUjBGQlJ5eFJRVUZSTEVOQlFVTXNZMEZCVkN4RFFVRjNRaXhSUVVGNFFpeERRVUZtTzBGQlEwRXNUVUZCU1N4SFFVRkhMRWRCUVVjc1VVRkJVU3hEUVVGRExHTkJRVlFzUTBGQmQwSXNhMEpCUVhoQ0xFTkJRVlk3UVVGQlFTeE5RVU5KTEVkQlFVY3NSMEZCUnl4UlFVRlJMRU5CUVVNc1kwRkJWQ3hEUVVGM1FpeHJRa0ZCZUVJc1EwRkVWanRCUVVkQkxFVkJRVUVzVlVGQlZTeERRVUZETEUxQlFWZ3NRMEZCYTBJc1RVRkJiRUlzUlVGQk1FSTdRVUZEZEVJc1NVRkJRU3hMUVVGTExFVkJRVVVzUTBGQlF5eERRVUZFTEVWQlFVa3NSMEZCU2l4RFFVUmxPMEZCUlhSQ08wRkJRMEVzU1VGQlFTeFBRVUZQTEVWQlFVVXNTVUZJWVR0QlFVbDBRanRCUVVOQkxFbEJRVUVzUzBGQlN5eEZRVUZGTzBGQlEwZ3NZVUZCVHl4RFFVUktPMEZCUlVnc1lVRkJUenRCUVVaS08wRkJUR1VzUjBGQk1VSTdRVUZaUVN4RlFVRkJMRTFCUVUwc1EwRkJReXhWUVVGUUxFTkJRV3RDTEVWQlFXeENMRU5CUVhGQ0xGRkJRWEpDTEVWQlFTdENMRlZCUVZVc1RVRkJWaXhGUVVGclFpeE5RVUZzUWl4RlFVRXdRanRCUVVOeVJDeFJRVUZKTEUxQlFVb3NSVUZCV1R0QlFVTlNMRTFCUVVFc1IwRkJSeXhEUVVGRExGTkJRVW9zUjBGQlowSXNTVUZCU1N4RFFVRkRMRXRCUVV3c1EwRkJWeXhOUVVGTkxFTkJRVU1zVFVGQlJDeERRVUZxUWl4RFFVRm9RanRCUVVOSUxFdEJSa1FzVFVGRlR6dEJRVU5JTEUxQlFVRXNSMEZCUnl4RFFVRkRMRk5CUVVvc1IwRkJaMElzU1VGQlNTeERRVUZETEV0QlFVd3NRMEZCVnl4TlFVRk5MRU5CUVVNc1RVRkJSQ3hEUVVGcVFpeERRVUZvUWp0QlFVTklPMEZCUTBvc1IwRk9SRHRCUVU5SUxFTkJla0pFSWl3aVptbHNaU0k2SW1kbGJtVnlZWFJsWkM1cWN5SXNJbk52ZFhKalpWSnZiM1FpT2lJaUxDSnpiM1Z5WTJWelEyOXVkR1Z1ZENJNld5SW9ablZ1WTNScGIyNG9LWHRtZFc1amRHbHZiaUJ5S0dVc2JpeDBLWHRtZFc1amRHbHZiaUJ2S0drc1ppbDdhV1lvSVc1YmFWMHBlMmxtS0NGbFcybGRLWHQyWVhJZ1l6MWNJbVoxYm1OMGFXOXVYQ0k5UFhSNWNHVnZaaUJ5WlhGMWFYSmxKaVp5WlhGMWFYSmxPMmxtS0NGbUppWmpLWEpsZEhWeWJpQmpLR2tzSVRBcE8ybG1LSFVwY21WMGRYSnVJSFVvYVN3aE1DazdkbUZ5SUdFOWJtVjNJRVZ5Y205eUtGd2lRMkZ1Ym05MElHWnBibVFnYlc5a2RXeGxJQ2RjSWl0cEsxd2lKMXdpS1R0MGFISnZkeUJoTG1OdlpHVTlYQ0pOVDBSVlRFVmZUazlVWDBaUFZVNUVYQ0lzWVgxMllYSWdjRDF1VzJsZFBYdGxlSEJ2Y25Sek9udDlmVHRsVzJsZFd6QmRMbU5oYkd3b2NDNWxlSEJ2Y25SekxHWjFibU4wYVc5dUtISXBlM1poY2lCdVBXVmJhVjFiTVYxYmNsMDdjbVYwZFhKdUlHOG9ibng4Y2lsOUxIQXNjQzVsZUhCdmNuUnpMSElzWlN4dUxIUXBmWEpsZEhWeWJpQnVXMmxkTG1WNGNHOXlkSE45Wm05eUtIWmhjaUIxUFZ3aVpuVnVZM1JwYjI1Y0lqMDlkSGx3Wlc5bUlISmxjWFZwY21VbUpuSmxjWFZwY21Vc2FUMHdPMms4ZEM1c1pXNW5kR2c3YVNzcktXOG9kRnRwWFNrN2NtVjBkWEp1SUc5OWNtVjBkWEp1SUhKOUtTZ3BJaXdpYVcxd2IzSjBJRndpTGk5emJHbGtaWEpjSWp0Y2JpSXNJbVJ2WTNWdFpXNTBMbUZrWkVWMlpXNTBUR2x6ZEdWdVpYSW9YQ0pFVDAxRGIyNTBaVzUwVEc5aFpHVmtYQ0lzSUNncElEMCtJSHRjYmx4dUlDQWdJR052Ym5OMElITnNhV1JsY2lBOUlHUnZZM1Z0Wlc1MExtZGxkRVZzWlcxbGJuUkNlVWxrS0NkemJHbGtaWEluS1R0Y2JpQWdJQ0JzWlhRZ2JXbHVJRDBnWkc5amRXMWxiblF1WjJWMFJXeGxiV1Z1ZEVKNVNXUW9KM05zYVdSbGNpMTJZV3gxWlMxdGFXNG5LU3hjYmlBZ0lDQWdJQ0FnYldGNElEMGdaRzlqZFcxbGJuUXVaMlYwUld4bGJXVnVkRUo1U1dRb0ozTnNhV1JsY2kxMllXeDFaUzF0WVhnbktUdGNibHh1SUNBZ0lHNXZWV2xUYkdsa1pYSXVZM0psWVhSbEtITnNhV1JsY2l3Z2UxeHVJQ0FnSUNBZ0lDQnpkR0Z5ZERvZ1d6QXNJREl3TUYwc1hHNGdJQ0FnSUNBZ0lDOHZJSFJ2YjJ4MGFYQnpPaUIwY25WbExGeHVJQ0FnSUNBZ0lDQmpiMjV1WldOME9pQjBjblZsTEZ4dUlDQWdJQ0FnSUNBdkx5QndZV1JrYVc1bk9pQTNMRnh1SUNBZ0lDQWdJQ0J5WVc1blpUb2dlMXh1SUNBZ0lDQWdJQ0FnSUNBZ0oyMXBiaWM2SURBc1hHNGdJQ0FnSUNBZ0lDQWdJQ0FuYldGNEp6b2dNakF3WEc0Z0lDQWdJQ0FnSUgwc1hHNGdJQ0FnZlNrN1hHNWNibHh1SUNBZ0lITnNhV1JsY2k1dWIxVnBVMnhwWkdWeUxtOXVLQ2QxY0dSaGRHVW5MQ0JtZFc1amRHbHZiaUFvZG1Gc2RXVnpMQ0JvWVc1a2JHVXBJSHRjYmlBZ0lDQWdJQ0FnYVdZZ0tHaGhibVJzWlNrZ2UxeHVJQ0FnSUNBZ0lDQWdJQ0FnYldGNExtbHVibVZ5U0ZSTlRDQTlJRTFoZEdndWNtOTFibVFvZG1Gc2RXVnpXMmhoYm1Sc1pWMHBPMXh1SUNBZ0lDQWdJQ0I5SUdWc2MyVWdlMXh1SUNBZ0lDQWdJQ0FnSUNBZ2JXbHVMbWx1Ym1WeVNGUk5UQ0E5SUUxaGRHZ3VjbTkxYm1Rb2RtRnNkV1Z6VzJoaGJtUnNaVjBwTzF4dUlDQWdJQ0FnSUNCOVhHNGdJQ0FnZlNrN1hHNTlLVHRjYmlKZGZRPT0ifQ==
